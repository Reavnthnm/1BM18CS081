#include<stdio.h>
#include<stdlib.h>
#define m 3

void enqueue(int *,int *,int *,int *);
void dequeue(int *,int *,int *);
void display(int *,int *,int *);

void enqueue(int q[],int *front,int *rear,int *item)
{
	if(*front==-1 && *rear==-1)
	{
		*front=0;
		*rear=0;
	}
	else{
		*rear=(*rear+1)%m;
	}
	q[*rear]=*item;

}

void dequeue(int q[],int *front,int *rear)
{

	if( *front==-1 && *rear==-1 )
		printf("\nQueue is empty");
	else
	{
		if(*front==*rear)
		{

			printf("\nremoved element: %d",q[*front]);
			printf("\n\n No elements remaining in queue...");
			*front=-1;
			*rear=-1;
		}
		else
		{
			printf("\nremoved element: %d",q[*front]);
			*front=(*front+1)%m;
		}
	}
}

void display(int q[],int *front,int *rear)
{
	int i;
	if( *front==-1 && *rear==-1)
        {
		printf("\nQueue is empty");
                return;
        }
	for(i=*front;i!=*rear ;i=(i+1)%m)
	{
		printf("\n%d",q[i]);
		
	}
	printf("\n%d",q[i]);
}

int main()
{
	int n,q[m],front=-1,rear=-1,item;
	while(1)
	{
		printf("\nchoose an operation: ");
		printf("\n1.enqueue\n2.dequeue\n3.display\n4.exit\n\nchoice :");
		scanf("%d",&n);
		switch(n)
		{
			case 1:if(front==(rear+1)%m)
				{
					printf("\nQueue is full");
					break;
				}
				else
				{
					printf("\nenter element: ");
					scanf("%d",&item);
					enqueue(q,&front,&rear,&item);
					break;
				}
			case 2:dequeue(q,&front,&rear);
				break;
			case 3:display(q,&front,&rear);
				break;
			case 4:exit(0);
			default:printf("\ninvalid input");
		}
	}
return 0;
}

